/* cwmp.h
   Generated by wsdl2h 2.8.19 from xsd/cwmp-1-4.xsd and typemap.dat
   2015-04-09 07:43:51 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on cwmp.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

cwmp = "urn:dslforum-org:cwmp-1-2"

*/

#define SOAP_NAMESPACE_OF_cwmp	"urn:dslforum-org:cwmp-1-2"
//gsoap cwmp  schema namespace:	urn:dslforum-org:cwmp-1-2
//gsoap cwmp  schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "SOAP-ENC:base64".
struct SOAP_ENC__base64 { unsigned char *__ptr; int __size; };

/// Built-in XSD type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":DefaultDeploymentUnitOperationType".
/// @brief Union of values from type "xs:string".
typedef char* cwmp__DeploymentUnitOperationType;

/// @brief "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType is a simpleType restriction of XSD type xs:unsignedInt.
///
/// <PRE><BLOCKQUOTE>
///   CPE Fault Codes from 9000 to 9799
///   * 9000 - Method not supported
///   * 9001 - Request denied (no reason specified)
///   * 9002 - Internal error
///   * 9003 - Invalid arguments
///   * 9004 - Resources exceeded
///   * 9005 - Invalid parameter name
///   * 9006 - Invalid parameter type
///   * 9007 - Invalid parameter value
///   * 9008 - Attempt to set a non-writable parameter
///   * 9009 - Notification request rejected
///   * 9010 - File transfer failure
///   * 9011 - Upload failure
///   * 9012 - File transfer server authentication failure
///   * 9013 - Unsupported protocol for file transfer
///   * 9014 - File transfer failure: unable to join multicast group
///   * 9015 - File transfer failure: unable to contact file server
///   * 9016 - File transfer failure: unable to access file
///   * 9017 - File transfer failure: unable to complete download
///   * 9018 - File transfer failure: file corrupted
///   * 9019 - File transfer failure: file authentication failure
///   * 9020 - File transfer failure: unable to complete download within specified time windows
///   * 9021 - Cancelation of file transfer not permitted in current transfer state
///   * 9022 - Invalid UUID Format
///   * 9023 - Unknown Execution Environment
///   * 9024 - Disabled Execution Environment
///   * 9025 - Deployment Unit to Execution Environment Mismatch
///   * 9026 - Duplicate Deployment Unit
///   * 9027 - System Resources Exceeded
///   * 9028 - Unknown Deployment Unit
///   * 9029 - Invalid Deployment Unit State
///   * 9030 - Invalid Deployement Unit Update Downgrade not permitted
///   * 9031 - Invalid Deployement Unit Update Version not specified
///   * 9032 - Invalid Deployment Unit Update Version already exists
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Value range is [9000..9799].
typedef unsigned int cwmp__CPEFaultCodeType 9000:9799;

/// @brief "urn:dslforum-org:cwmp-1-2":CPEExtensionFaultCodeType is a simpleType restriction of XSD type xs:unsignedInt.
///
/// <PRE><BLOCKQUOTE>
///   Range of CPE Fault Codes from 9033 to 9799 for future extension
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Value range is [9033..9799].
typedef unsigned int cwmp__CPEExtensionFaultCodeType 9033:9799;

/// @brief "urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType is a simpleType restriction of XSD type xs:unsignedInt.
///
/// <PRE><BLOCKQUOTE>
///   Vendor Extension range for CPE Fault Codes from 9800 to 9899
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Value range is [9800..9899].
typedef unsigned int cwmp__CPEVendorFaultCodeType 9800:9899;

/// @brief "urn:dslforum-org:cwmp-1-2":ACSFaultCodeType is a simpleType restriction of XSD type xs:unsignedInt.
///
/// <PRE><BLOCKQUOTE>
///   ACS Fault Codes from 8000 to 8005
///   * 8000 - Method not supported
///   * 8001 - Request denied (no reason specified)
///   * 8002 - Internal error
///   * 8003 - Invalid arguments
///   * 8004 - Resources exceeded
///   * 8005 - Retry request
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Value range is [8000..8799].
typedef unsigned int cwmp__ACSFaultCodeType 8000:8799;

/// @brief "urn:dslforum-org:cwmp-1-2":ACSVendorFaultCodeType is a simpleType restriction of XSD type xs:unsignedInt.
///
/// <PRE><BLOCKQUOTE>
///   Vendor Extension range for ACS Fault Codes from 8800 to 8899
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Value range is [8800..8899].
typedef unsigned int cwmp__ACSVendorFaultCodeType 8800:8899;

/// @brief "urn:dslforum-org:cwmp-1-2":TransferFileType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   This type is used for AllQueuedTransferStruct and AutonomousTransferComplete
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
/// Content pattern is "[1-9]\\d*( \\S+)+".
/// Content pattern is "[1-9]\\d*( \\S+)+ [1-9]\\d*".
/// Content pattern is "X [0-9A-F]{6} .+".
/// Content pattern is "X \\S+ .+".
typedef char* cwmp__TransferFileType "[1-9]\\d*( \\S+)+|[1-9]\\d*( \\S+)+ [1-9]\\d*|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// @brief "urn:dslforum-org:cwmp-1-2":DownloadFileType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   This type is used for Download and RequestDownload
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
/// Content pattern is "[1-9]\\d*( \\S+)+".
/// Content pattern is "X [0-9A-F]{6} .+".
/// Content pattern is "X \\S+ .+".
typedef char* cwmp__DownloadFileType "[1-9]\\d*( \\S+)+|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// @brief "urn:dslforum-org:cwmp-1-2":UploadFileType is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   This type is used for Upload
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..64.
/// Content pattern is "[1-9]\\d*( \\S+)+".
/// Content pattern is "[1-9]\\d*( \\S+)+ [1-9]\\d*".
/// Content pattern is "X [0-9A-F]{6} .+".
/// Content pattern is "X \\S+ .+".
typedef char* cwmp__UploadFileType "[1-9]\\d*( \\S+)+|[1-9]\\d*( \\S+)+ [1-9]\\d*|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// @brief "urn:dslforum-org:cwmp-1-2":EventCodeType is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..64.
/// Content pattern is "\\d+( \\S+)+".
/// Content pattern is "M \\S+".
/// Content pattern is "M X_\\S+".
/// Content pattern is "X [0-9A-F]{6} .+".
/// Content pattern is "X \\S+ .+".
typedef char* cwmp__EventCodeType "\\d+( \\S+)+|M \\S+|M X_\\S+|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// @brief "urn:dslforum-org:cwmp-1-2":TimeWindowModeValueType is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..64.
/// Content pattern is "[1-9]\\d*( \\S+)+".
/// Content pattern is "X [0-9A-F]{6} .+".
/// Content pattern is "X \\S+ .+".
typedef char* cwmp__TimeWindowModeValueType "[1-9]\\d*( \\S+)+|X [0-9A-F]{6} .+|X \\S+ .+":64;

/// @brief "urn:dslforum-org:cwmp-1-2":CommandKeyType is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..32.
typedef char* cwmp__CommandKeyType:32;

/// @brief "urn:dslforum-org:cwmp-1-2":ObjectNameType is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..256.
/// Content pattern is ".*\\.".
typedef char* cwmp__ObjectNameType ".*\\.":256;

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterKeyType is a simpleType restriction of XSD type xs:string.
///
/// Length of this string is 0..32.
typedef char* cwmp__ParameterKeyType:32;

/// @brief "urn:dslforum-org:cwmp-1-2":AccessListValueType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "cwmp__AccessListValueType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__AccessListValueType
{
	cwmp__AccessListValueType__Subscriber,	///< xs:string value="Subscriber"
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterAttributeNotificationValueType is a simpleType restriction of XSD type xs:int.
///
/// @note The enum values are prefixed with "cwmp__ParameterAttributeNotificationValueType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__ParameterAttributeNotificationValueType
{
/// <PRE><BLOCKQUOTE>
///   Notification off. The CPE need not inform the ACS of a change to the specified parameter(s)
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   Passive notification. Whenever the specified parameter value changes, the CPE MUST include the new value in the ParameterList in the Inform message that is sent the next time a session is established to the ACS
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__1 = 1,	///< xs:int value="1"
/// <PRE><BLOCKQUOTE>
///   Active notification. Whenever the specified parameter value changes, the CPE MUST initiate a session to the ACS, and include the new value in the ParameterList in the associated Inform message
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__2 = 2,	///< xs:int value="2"
/// <PRE><BLOCKQUOTE>
///   Reserved for future use
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__3 = 3,	///< xs:int value="3"
/// <PRE><BLOCKQUOTE>
///   Reserved for future use
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__4 = 4,	///< xs:int value="4"
/// <PRE><BLOCKQUOTE>
///   Reserved for future use
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__5 = 5,	///< xs:int value="5"
/// <PRE><BLOCKQUOTE>
///   Reserved for future use
/// </BLOCKQUOTE></PRE>
	cwmp__ParameterAttributeNotificationValueType__6 = 6,	///< xs:int value="6"
};

/// @brief "urn:dslforum-org:cwmp-1-2":TransferStateType is a simpleType restriction of XSD type xs:int.
///
/// @note The enum values are prefixed with "cwmp__TransferStateType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__TransferStateType
{
/// <PRE><BLOCKQUOTE>
///   Not yet started
/// </BLOCKQUOTE></PRE>
	cwmp__TransferStateType__1 = 1,	///< xs:int value="1"
/// <PRE><BLOCKQUOTE>
///   In progress
/// </BLOCKQUOTE></PRE>
	cwmp__TransferStateType__2 = 2,	///< xs:int value="2"
/// <PRE><BLOCKQUOTE>
///   Completed
/// </BLOCKQUOTE></PRE>
	cwmp__TransferStateType__3 = 3,	///< xs:int value="3"
};

/// @brief "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   A unique identifier for a Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..unbounded.
/// Content pattern is "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}".
typedef char* cwmp__DeploymentUnitUUID "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}";

/// @brief "urn:dslforum-org:cwmp-1-2":DeploymentUnitState is a simpleType restriction of XSD type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The state of a Deployment Unit on the device
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "cwmp__DeploymentUnitState__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__DeploymentUnitState
{
/// <PRE><BLOCKQUOTE>
///   The Deployment Unit has been Installed.
/// </BLOCKQUOTE></PRE>
	cwmp__DeploymentUnitState__Installed,	///< xs:string value="Installed"
/// <PRE><BLOCKQUOTE>
///   The Deployment Unit has been Uninstalled.
/// </BLOCKQUOTE></PRE>
	cwmp__DeploymentUnitState__Uninstalled,	///< xs:string value="Uninstalled"
/// <PRE><BLOCKQUOTE>
///   The Deployment Unit Installed failed such that the Deployment Unit instance
///   could not be created.
/// </BLOCKQUOTE></PRE>
	cwmp__DeploymentUnitState__Failed,	///< xs:string value="Failed"
};

/// @brief "urn:dslforum-org:cwmp-1-2":DefaultDeploymentUnitOperationType is a simpleType restriction of XSD type xs:string.
///
/// @note The enum values are prefixed with "cwmp__DefaultDeploymentUnitOperationType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__DefaultDeploymentUnitOperationType
{
/// <PRE><BLOCKQUOTE>
///   Install of a Deployment Unit
/// </BLOCKQUOTE></PRE>
	cwmp__DefaultDeploymentUnitOperationType__Install,	///< xs:string value="Install"
/// <PRE><BLOCKQUOTE>
///   Update of a Deployment Unit
/// </BLOCKQUOTE></PRE>
	cwmp__DefaultDeploymentUnitOperationType__Update,	///< xs:string value="Update"
/// <PRE><BLOCKQUOTE>
///   Uninstall of a Deployment Unit
/// </BLOCKQUOTE></PRE>
	cwmp__DefaultDeploymentUnitOperationType__Uninstall,	///< xs:string value="Uninstall"
};

/// @brief "urn:dslforum-org:cwmp-1-2":TransferCompleteCPEFaultCodeType is a simpleType restriction of XSD type "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType.
///
/// <PRE><BLOCKQUOTE>
///   Restricted subset of CPEFaultCodeType that are specific for the TransferComplete and AutonomousTransferComplete RPCs
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "cwmp__TransferCompleteCPEFaultCodeType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__TransferCompleteCPEFaultCodeType
{
	cwmp__TransferCompleteCPEFaultCodeType__9001 = 9001,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9001"
	cwmp__TransferCompleteCPEFaultCodeType__9002 = 9002,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9002"
	cwmp__TransferCompleteCPEFaultCodeType__9010 = 9010,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9010"
	cwmp__TransferCompleteCPEFaultCodeType__9011 = 9011,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9011"
	cwmp__TransferCompleteCPEFaultCodeType__9012 = 9012,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9012"
	cwmp__TransferCompleteCPEFaultCodeType__9014 = 9014,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9014"
	cwmp__TransferCompleteCPEFaultCodeType__9015 = 9015,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9015"
	cwmp__TransferCompleteCPEFaultCodeType__9016 = 9016,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9016"
	cwmp__TransferCompleteCPEFaultCodeType__9017 = 9017,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9017"
	cwmp__TransferCompleteCPEFaultCodeType__9018 = 9018,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9018"
	cwmp__TransferCompleteCPEFaultCodeType__9019 = 9019,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9019"
	cwmp__TransferCompleteCPEFaultCodeType__9020 = 9020,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9020"
};

/// @brief "urn:dslforum-org:cwmp-1-2":DeploymentUnitCPEFaultCodeType is a simpleType restriction of XSD type "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType.
///
/// <PRE><BLOCKQUOTE>
///   Restricted subset of CPEFaultCodeType that are specific for a single operation in the DUStateChangeComplete and AutonomousDUStateChangeComplete RPCs
/// </BLOCKQUOTE></PRE>
/// @note The enum values are prefixed with "cwmp__DeploymentUnitCPEFaultCodeType__" to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum cwmp__DeploymentUnitCPEFaultCodeType
{
	cwmp__DeploymentUnitCPEFaultCodeType__9001 = 9001,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9001"
	cwmp__DeploymentUnitCPEFaultCodeType__9003 = 9003,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9003"
	cwmp__DeploymentUnitCPEFaultCodeType__9012 = 9012,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9012"
	cwmp__DeploymentUnitCPEFaultCodeType__9013 = 9013,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9013"
	cwmp__DeploymentUnitCPEFaultCodeType__9015 = 9015,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9015"
	cwmp__DeploymentUnitCPEFaultCodeType__9016 = 9016,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9016"
	cwmp__DeploymentUnitCPEFaultCodeType__9017 = 9017,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9017"
	cwmp__DeploymentUnitCPEFaultCodeType__9018 = 9018,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9018"
	cwmp__DeploymentUnitCPEFaultCodeType__9022 = 9022,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9022"
	cwmp__DeploymentUnitCPEFaultCodeType__9023 = 9023,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9023"
	cwmp__DeploymentUnitCPEFaultCodeType__9024 = 9024,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9024"
	cwmp__DeploymentUnitCPEFaultCodeType__9025 = 9025,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9025"
	cwmp__DeploymentUnitCPEFaultCodeType__9026 = 9026,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9026"
	cwmp__DeploymentUnitCPEFaultCodeType__9027 = 9027,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9027"
	cwmp__DeploymentUnitCPEFaultCodeType__9028 = 9028,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9028"
	cwmp__DeploymentUnitCPEFaultCodeType__9029 = 9029,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9029"
	cwmp__DeploymentUnitCPEFaultCodeType__9030 = 9030,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9030"
	cwmp__DeploymentUnitCPEFaultCodeType__9031 = 9031,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9031"
	cwmp__DeploymentUnitCPEFaultCodeType__9032 = 9032,	///< "urn:dslforum-org:cwmp-1-2":CPEFaultCodeType value="9032"
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/

/// @brief "urn:dslforum-org:cwmp-1-2":TransferCompleteFaultStruct is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Fault information for TransferComplete and AutonomousTransferComplete
/// </BLOCKQUOTE></PRE>
struct cwmp__TransferCompleteFaultStruct
{
/// <PRE><BLOCKQUOTE>
///   Fault codes only related to TransferComplete RPCs
/// </BLOCKQUOTE></PRE>
/// @brief Union of values from type "xs:unsignedInt".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":TransferCompleteCPEFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEExtensionFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType".
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         FaultString                    1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":DeploymentUnitFaultStruct is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Structure used to convey success or failure status of an operation performed on a Deployment Unit
/// </BLOCKQUOTE></PRE>
struct cwmp__DeploymentUnitFaultStruct
{
/// <PRE><BLOCKQUOTE>
///   Fault codes only related to DUStateChangeComplete RPCs
/// </BLOCKQUOTE></PRE>
/// @brief Union of values from type "xs:unsignedInt".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":DeploymentUnitCPEFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEExtensionFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType".
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional detail message providing further context for the fault
/// </BLOCKQUOTE></PRE>
/// Element "FaultString" of XSD type xs:string.
    char*                                FaultString                    0;	///< Optional element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterValueStruct is a complexType.
///
struct cwmp__ParameterValueStruct
{
/// Length of this string is 0..256.
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element "Value" of XSD type xs:anySimpleType.
    xsd__anySimpleType                   Value                          1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":DeviceIdStruct is a complexType.
///
struct cwmp__DeviceIdStruct
{
/// Length of this string is 0..64.
    char*                                                              
                                         Manufacturer                   1;	///< Required element.
/// Length of this string is 6.
/// Content pattern is "[0-9A-F]{6}".
    char*                                                              
                                         OUI                            1;	///< Required element.
/// Length of this string is 0..64.
    char*                                                              
                                         ProductClass                   1;	///< Required element.
/// Length of this string is 0..64.
    char*                                                              
                                         SerialNumber                   1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":EventStruct is a complexType.
///
struct cwmp__EventStruct
{
/// Element "EventCode" of XSD type "urn:dslforum-org:cwmp-1-2":EventCodeType.
    cwmp__EventCodeType                  EventCode                      1;	///< Required element.
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterInfoStruct is a complexType.
///
struct cwmp__ParameterInfoStruct
{
/// Length of this string is 0..256.
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element "Writable" of XSD type xs:boolean.
    enum xsd__boolean                    Writable                       1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":SetParameterAttributesStruct is a complexType.
///
struct cwmp__SetParameterAttributesStruct
{
/// Length of this string is 0..256.
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element "NotificationChange" of XSD type xs:boolean.
    enum xsd__boolean                    NotificationChange             1;	///< Required element.
/// Element "Notification" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterAttributeNotificationValueType.
    enum cwmp__ParameterAttributeNotificationValueType  Notification                   1;	///< Required element.
/// Element "AccessListChange" of XSD type xs:boolean.
    enum xsd__boolean                    AccessListChange               1;	///< Required element.
/// Element "AccessList" of XSD type "urn:dslforum-org:cwmp-1-2":AccessList.
    struct AccessList*                   AccessList                     1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterAttributeStruct is a complexType.
///
struct cwmp__ParameterAttributeStruct
{
/// Length of this string is 0..256.
    char*                                                              
                                         Name                           1;	///< Required element.
/// Element "Notification" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterAttributeNotificationValueType.
    enum cwmp__ParameterAttributeNotificationValueType  Notification                   1;	///< Required element.
/// Element "AccessList" of XSD type "urn:dslforum-org:cwmp-1-2":AccessList.
    struct AccessList*                   AccessList                     1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":TimeWindowStruct is a complexType.
///
struct cwmp__TimeWindowStruct
{
/// Element "WindowStart" of XSD type xs:unsignedInt.
    unsigned int                         WindowStart                    1;	///< Required element.
/// Element "WindowEnd" of XSD type xs:unsignedInt.
    unsigned int                         WindowEnd                      1;	///< Required element.
/// Element "WindowMode" of XSD type "urn:dslforum-org:cwmp-1-2":TimeWindowModeValueType.
    cwmp__TimeWindowModeValueType        WindowMode                     1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         UserMessage                    1;	///< Required element.
/// Element "MaxRetries" of XSD type xs:int.
    int                                  MaxRetries                     1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":QueuedTransferStruct is a complexType.
///
struct cwmp__QueuedTransferStruct
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
/// Element "State" of XSD type "urn:dslforum-org:cwmp-1-2":TransferStateType.
    enum cwmp__TransferStateType         State                          1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":AllQueuedTransferStruct is a complexType.
///
struct cwmp__AllQueuedTransferStruct
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
/// Element "State" of XSD type "urn:dslforum-org:cwmp-1-2":TransferStateType.
    enum cwmp__TransferStateType         State                          1;	///< Required element.
/// Element "IsDownload" of XSD type xs:boolean.
    enum xsd__boolean                    IsDownload                     1;	///< Required element.
/// Element "FileType" of XSD type "urn:dslforum-org:cwmp-1-2":TransferFileType.
    cwmp__TransferFileType               FileType                       1;	///< Required element.
/// Element "FileSize" of XSD type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":OperationStruct is an abstract complexType.
///
/// <PRE><BLOCKQUOTE>
///   A base type for Deployment Unit operations that can be performed on a device
/// </BLOCKQUOTE></PRE>
struct cwmp__OperationStruct
{
};

/// @brief "urn:dslforum-org:cwmp-1-2":OpResultStruct is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The result of a Deployment Unit operation performed on the device
/// </BLOCKQUOTE></PRE>
struct cwmp__OpResultStruct
{
/// <PRE><BLOCKQUOTE>
///   The UUID of the affected Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Element "UUID" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    cwmp__DeploymentUnitUUID             UUID                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the affected Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Element "DeploymentUnitRef" of XSD type xs:string.
    char*                                DeploymentUnitRef              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Version of the affected Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..32.
    char*                                                              
                                         Version                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The current state of the affected Deployment Unit after performing the operation
/// </BLOCKQUOTE></PRE>
/// Element "CurrentState" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitState.
    enum cwmp__DeploymentUnitState       CurrentState                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Whether or not the Deployment Unit resolved all of its dependencies after the Installation or Update
/// </BLOCKQUOTE></PRE>
/// Element "Resolved" of XSD type xs:boolean.
    enum xsd__boolean                    Resolved                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A comma-separated list of execution unit references (e.g., ".SoftwareModules.ExecutionUnit.2, .SoftwareModules.ExecutionUnit.3").
///   In the case of an install, the execution units are those created by the operation. In
///   the case of an uninstall, the execution units are those removed by the operation. In the case of an update, the execution units are those that remain after the operation
///   has completed.
/// </BLOCKQUOTE></PRE>
/// Element "ExecutionUnitRefList" of XSD type xs:string.
    char*                                ExecutionUnitRefList           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time on the device the operation on the affected Deployment Unit started. If the
///   CPE cannot determine this, then the value should be the Unknown Time value.
/// </BLOCKQUOTE></PRE>
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time on the device the operation on the affected Deployment Unit completed (successfully
///   or otherwise). If the CPE cannot determine this, then the value should be the Unknown Time
///   value.
/// </BLOCKQUOTE></PRE>
/// Element "CompleteTime" of XSD type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Fault structure conveying the success or, in the case of failure, reason for the failure,
///   of the operation
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitFaultStruct.
    struct cwmp__DeploymentUnitFaultStruct*  Fault                          1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":OptionStruct is a complexType.
///
struct cwmp__OptionStruct
{
/// Length of this string is 0..64.
    char*                                                              
                                         OptionName                     1;	///< Required element.
/// Element "VoucherSN" of XSD type xs:unsignedInt.
    unsigned int                         VoucherSN                      1;	///< Required element.
    enum _cwmp__OptionStruct_State
    {
/// <PRE><BLOCKQUOTE>
///   Option is disabled and not setup
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_State__0 = 0,	///< xs:unsignedInt value="0"
/// <PRE><BLOCKQUOTE>
///   Option is enabled and not setup
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_State__1 = 1,	///< xs:unsignedInt value="1"
/// <PRE><BLOCKQUOTE>
///   Option is disabled and setup
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_State__2 = 2,	///< xs:unsignedInt value="2"
/// <PRE><BLOCKQUOTE>
///   Option is enabled and setup
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_State__3 = 3,	///< xs:unsignedInt value="3"
    }
                                         State                          1;	///< Required element.
    enum _cwmp__OptionStruct_Mode
    {
/// <PRE><BLOCKQUOTE>
///   0 - Disabled
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_Mode__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   1 - Enabled with expiration
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_Mode__1 = 1,	///< xs:int value="1"
/// <PRE><BLOCKQUOTE>
///   2 - Enabled without expiration
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_Mode__2 = 2,	///< xs:int value="2"
    }
                                         Mode                           1;	///< Required element.
/// Element "StartDate" of XSD type xs:dateTime.
    time_t                               StartDate                      1;	///< Required element.
/// Element "ExpirationDate" of XSD type xs:dateTime.
    time_t*                              ExpirationDate                 0;	///< Optional element.
    enum _cwmp__OptionStruct_IsTransferable
    {
/// <PRE><BLOCKQUOTE>
///   Non-transferable
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_IsTransferable__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   Transferable
/// </BLOCKQUOTE></PRE>
	_cwmp__OptionStruct_IsTransferable__1 = 1,	///< xs:int value="1"
    }
                                         IsTransferable                 1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":ArgStruct is a complexType.
///
struct cwmp__ArgStruct
{
/// Length of this string is 0..64.
    char*                                                              
                                         Name                           1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Value                          1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":Fault
/// @brief "urn:dslforum-org:cwmp-1-2":Fault is a complexType.
///
struct _cwmp__Fault
{
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":ACSFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":ACSVendorFaultCodeType".
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// Element "FaultString" of XSD type xs:string.
    char*                                FaultString                    0;	///< Optional element.
/// Size of SetParameterValuesFault array is 0..unbounded.
   $int                                  __sizeSetParameterValuesFault  0;
    struct _cwmp__Fault_SetParameterValuesFault
    {
/// Element "ParameterName" of XSD type xs:string.
    char*                                ParameterName                  1;	///< Required element.
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEFaultCodeType".
/// @brief Union of values from type ""urn:dslforum-org:cwmp-1-2":CPEVendorFaultCodeType".
    char*                                                              
                                         FaultCode                      1;	///< Required element.
/// Element "FaultString" of XSD type xs:string.
    char*                                FaultString                    0;	///< Optional element.
    }                                   *SetParameterValuesFault        0;
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetRPCMethods
/// <PRE><BLOCKQUOTE>
///   GeRPCMethods message - Annex A.3.1.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetRPCMethods is a complexType.
///
struct _cwmp__GetRPCMethods
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetRPCMethodsResponse
/// <PRE><BLOCKQUOTE>
///   GeRPCMethodsResponse message - Annex A.3.1.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetRPCMethodsResponse is a complexType.
///
struct _cwmp__GetRPCMethodsResponse
{
/// Element "MethodList" of XSD type "urn:dslforum-org:cwmp-1-2":MethodList.
    struct MethodList*                   MethodList                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterValues
/// <PRE><BLOCKQUOTE>
///   SetParameterValues message - Annex A.3.2.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":SetParameterValues is a complexType.
///
struct _cwmp__SetParameterValues
{
/// Element "ParameterList" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterValueList.
    struct ParameterValueList*           ParameterList                  1;	///< Required element.
/// Element "ParameterKey" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterKeyType.
    cwmp__ParameterKeyType               ParameterKey                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterValuesResponse
/// <PRE><BLOCKQUOTE>
///   SetParameterValuesResponse message - Annex A.3.2.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":SetParameterValuesResponse is a complexType.
///
struct _cwmp__SetParameterValuesResponse
{
    enum _cwmp__SetParameterValuesResponse_Status
    {
/// <PRE><BLOCKQUOTE>
///   All Parameter changes have been validated and applied
/// </BLOCKQUOTE></PRE>
	_cwmp__SetParameterValuesResponse_Status__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   All Parameter changes have been validated and committed, but some or all are not yet applied (for example, if a reboot is required before the new values are applied)
/// </BLOCKQUOTE></PRE>
	_cwmp__SetParameterValuesResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterValues
/// <PRE><BLOCKQUOTE>
///   GetParameterValues message - Annex A.3.2.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetParameterValues is a complexType.
///
struct _cwmp__GetParameterValues
{
/// Element "ParameterNames" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterNames.
    struct ParameterNames*               ParameterNames                 1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterValuesResponse
/// <PRE><BLOCKQUOTE>
///   GetParameterValuesResponse message - Annex A.3.2.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetParameterValuesResponse is a complexType.
///
struct _cwmp__GetParameterValuesResponse
{
/// Element "ParameterList" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterValueList.
    struct ParameterValueList*           ParameterList                  1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterNames
/// <PRE><BLOCKQUOTE>
///   GetParameterNames message - Annex A.3.2.3
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetParameterNames is a complexType.
///
struct _cwmp__GetParameterNames
{
/// Length of this string is 0..256.
    char*                                                              
                                         ParameterPath                  1;	///< Required element.
/// Element "NextLevel" of XSD type xs:boolean.
    enum xsd__boolean                    NextLevel                      1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterNamesResponse
/// <PRE><BLOCKQUOTE>
///   GetParameterNamesResponse message - Annex A.3.2.3
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetParameterNamesResponse is a complexType.
///
struct _cwmp__GetParameterNamesResponse
{
/// Element "ParameterList" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterInfoList.
    struct ParameterInfoList*            ParameterList                  1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterAttributes
/// <PRE><BLOCKQUOTE>
///   SetParameterAttributes message - Annex A.3.2.4
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":SetParameterAttributes is a complexType.
///
struct _cwmp__SetParameterAttributes
{
/// Element "ParameterList" of XSD type "urn:dslforum-org:cwmp-1-2":SetParameterAttributesList.
    struct SetParameterAttributesList*   ParameterList                  1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SetParameterAttributesResponse
/// <PRE><BLOCKQUOTE>
///   SetParameterAttributesResponse message - Annex A.3.2.4
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":SetParameterAttributesResponse is a complexType.
///
struct _cwmp__SetParameterAttributesResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterAttributes
/// <PRE><BLOCKQUOTE>
///   GetParameterAttributes message - Annex A.3.2.5
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetParameterAttributes is a complexType.
///
struct _cwmp__GetParameterAttributes
{
/// Element "ParameterNames" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterNames.
    struct ParameterNames*               ParameterNames                 1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetParameterAttributesResponse
/// <PRE><BLOCKQUOTE>
///   GetParameterAttributesResponse message - Annex A.3.2.5
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetParameterAttributesResponse is a complexType.
///
struct _cwmp__GetParameterAttributesResponse
{
/// Element "ParameterList" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterAttributeList.
    struct ParameterAttributeList*       ParameterList                  1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":AddObject
/// <PRE><BLOCKQUOTE>
///   AddObject message - Annex A.3.2.6
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":AddObject is a complexType.
///
struct _cwmp__AddObject
{
/// Element "ObjectName" of XSD type "urn:dslforum-org:cwmp-1-2":ObjectNameType.
    cwmp__ObjectNameType                 ObjectName                     1;	///< Required element.
/// Element "ParameterKey" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterKeyType.
    cwmp__ParameterKeyType               ParameterKey                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":AddObjectResponse
/// <PRE><BLOCKQUOTE>
///   AddObjectResponse message - Annex A.3.2.6
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":AddObjectResponse is a complexType.
///
struct _cwmp__AddObjectResponse
{
/// Length of this string is 0..unbounded.
/// Value range is [1..].
    unsigned int                                                       
                                         InstanceNumber                 1;	///< Required element.
    enum _cwmp__AddObjectResponse_Status
    {
/// <PRE><BLOCKQUOTE>
///   The object has been created
/// </BLOCKQUOTE></PRE>
	_cwmp__AddObjectResponse_Status__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   The object creation has been validated and committed, but not yet applied
/// </BLOCKQUOTE></PRE>
	_cwmp__AddObjectResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":DeleteObject
/// <PRE><BLOCKQUOTE>
///   DeleteObject message - Annex A.3.2.7
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":DeleteObject is a complexType.
///
struct _cwmp__DeleteObject
{
/// Element "ObjectName" of XSD type "urn:dslforum-org:cwmp-1-2":ObjectNameType.
    cwmp__ObjectNameType                 ObjectName                     1;	///< Required element.
/// Element "ParameterKey" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterKeyType.
    cwmp__ParameterKeyType               ParameterKey                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":DeleteObjectResponse
/// <PRE><BLOCKQUOTE>
///   DeleteObjectResponse message - Annex A.3.2.7
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":DeleteObjectResponse is a complexType.
///
struct _cwmp__DeleteObjectResponse
{
    enum _cwmp__DeleteObjectResponse_Status
    {
/// <PRE><BLOCKQUOTE>
///   The object has been deleted
/// </BLOCKQUOTE></PRE>
	_cwmp__DeleteObjectResponse_Status__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   The object deletion has been validated and committed, but not yet applied
/// </BLOCKQUOTE></PRE>
	_cwmp__DeleteObjectResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":Download
/// <PRE><BLOCKQUOTE>
///   Download message - Annex A.3.2.8
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":Download is a complexType.
///
struct _cwmp__Download
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
/// Element "FileType" of XSD type "urn:dslforum-org:cwmp-1-2":DownloadFileType.
    cwmp__DownloadFileType               FileType                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         URL                            1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Username                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Password                       1;	///< Required element.
/// Element "FileSize" of XSD type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
/// Element "DelaySeconds" of XSD type xs:unsignedInt.
    unsigned int                         DelaySeconds                   1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         SuccessURL                     1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         FailureURL                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":DownloadResponse
/// <PRE><BLOCKQUOTE>
///   DownloadResponse message - Annex A.3.2.8
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":DownloadResponse is a complexType.
///
struct _cwmp__DownloadResponse
{
    enum _cwmp__DownloadResponse_Status
    {
/// <PRE><BLOCKQUOTE>
///   Download has completed and been applied
/// </BLOCKQUOTE></PRE>
	_cwmp__DownloadResponse_Status__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   Download has not yet been completed and applied
/// </BLOCKQUOTE></PRE>
	_cwmp__DownloadResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element "CompleteTime" of XSD type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":Reboot
/// <PRE><BLOCKQUOTE>
///   Reboot message - Annex A.3.2.9
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":Reboot is a complexType.
///
struct _cwmp__Reboot
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":RebootResponse
/// <PRE><BLOCKQUOTE>
///   RebootResponse message - Annex A.3.2.9
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":RebootResponse is a complexType.
///
struct _cwmp__RebootResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetQueuedTransfers
/// <PRE><BLOCKQUOTE>
///   GetQueuedTransfers message - Annex A.4.1.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetQueuedTransfers is a complexType.
///
struct _cwmp__GetQueuedTransfers
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetQueuedTransfersResponse
/// <PRE><BLOCKQUOTE>
///   GetQueuedTransfersResponse message - Annex A.4.1.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetQueuedTransfersResponse is a complexType.
///
struct _cwmp__GetQueuedTransfersResponse
{
/// Element "TransferList" of XSD type "urn:dslforum-org:cwmp-1-2":TransferList.
    struct TransferList*                 TransferList                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleInform
/// <PRE><BLOCKQUOTE>
///   ScheduleInform message - Annex A.4.1.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":ScheduleInform is a complexType.
///
struct _cwmp__ScheduleInform
{
/// Element "DelaySeconds" of XSD type xs:unsignedInt.
    unsigned int                         DelaySeconds                   1;	///< Required element.
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleInformResponse
/// <PRE><BLOCKQUOTE>
///   ScheduleInformResponse message - Annex A.4.1.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":ScheduleInformResponse is a complexType.
///
struct _cwmp__ScheduleInformResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SetVouchers
/// <PRE><BLOCKQUOTE>
///   SetVouchers message - Annex A.4.1.3
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":SetVouchers is a complexType.
///
struct _cwmp__SetVouchers
{
/// Element "VoucherList" of XSD type "urn:dslforum-org:cwmp-1-2":VoucherList.
    struct VoucherList*                  VoucherList                    1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SetVouchersResponse
/// <PRE><BLOCKQUOTE>
///   SetVouchersResponse message - Annex A.4.1.3
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":SetVouchersResponse is a complexType.
///
struct _cwmp__SetVouchersResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetOptions
/// <PRE><BLOCKQUOTE>
///   GetOptions message - Annex A.4.1.4
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetOptions is a complexType.
///
struct _cwmp__GetOptions
{
/// Length of this string is 0..64.
    char*                                                              
                                         OptionName                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetOptionsResponse
/// <PRE><BLOCKQUOTE>
///   GetOptionsResponse message - Annex A.4.1.4
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetOptionsResponse is a complexType.
///
struct _cwmp__GetOptionsResponse
{
/// Element "OptionList" of XSD type "urn:dslforum-org:cwmp-1-2":OptionList.
    struct OptionList*                   OptionList                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":Upload
/// <PRE><BLOCKQUOTE>
///   Upload message - Annex A.4.1.5
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":Upload is a complexType.
///
struct _cwmp__Upload
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
/// Element "FileType" of XSD type "urn:dslforum-org:cwmp-1-2":UploadFileType.
    cwmp__UploadFileType                 FileType                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         URL                            1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Username                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Password                       1;	///< Required element.
/// Element "DelaySeconds" of XSD type xs:unsignedInt.
    unsigned int                         DelaySeconds                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":UploadResponse
/// <PRE><BLOCKQUOTE>
///   UploadResponse message - Annex A.4.1.5
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":UploadResponse is a complexType.
///
struct _cwmp__UploadResponse
{
    enum _cwmp__UploadResponse_Status
    {
/// <PRE><BLOCKQUOTE>
///   Upload has been completed
/// </BLOCKQUOTE></PRE>
	_cwmp__UploadResponse_Status__0 = 0,	///< xs:int value="0"
/// <PRE><BLOCKQUOTE>
///   Upload has not yet completed
/// </BLOCKQUOTE></PRE>
	_cwmp__UploadResponse_Status__1 = 1,	///< xs:int value="1"
    }
                                         Status                         1;	///< Required element.
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element "CompleteTime" of XSD type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":FactoryReset
/// <PRE><BLOCKQUOTE>
///   FactoryReset message - Annex A.4.1.6
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":FactoryReset is a complexType.
///
struct _cwmp__FactoryReset
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":FactoryResetResponse
/// <PRE><BLOCKQUOTE>
///   FactoryResetResponse message - Annex A.4.1.6
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":FactoryResetResponse is a complexType.
///
struct _cwmp__FactoryResetResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfers
/// <PRE><BLOCKQUOTE>
///   GetAllQueuedTransfers message - Annex A.4.1.7
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfers is a complexType.
///
struct _cwmp__GetAllQueuedTransfers
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfersResponse
/// <PRE><BLOCKQUOTE>
///   GetAllQueuedTransfersResponse message - Annex A.4.1.7
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":GetAllQueuedTransfersResponse is a complexType.
///
struct _cwmp__GetAllQueuedTransfersResponse
{
/// Element "TransferList" of XSD type "urn:dslforum-org:cwmp-1-2":AllTransferList.
    struct AllTransferList*              TransferList                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleDownload
/// <PRE><BLOCKQUOTE>
///   ScheduleDownload message - Annex A.4.1.8
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":ScheduleDownload is a complexType.
///
struct _cwmp__ScheduleDownload
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
/// Element "FileType" of XSD type "urn:dslforum-org:cwmp-1-2":DownloadFileType.
    cwmp__DownloadFileType               FileType                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         URL                            1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Username                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Password                       1;	///< Required element.
/// Element "FileSize" of XSD type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
/// Element "TimeWindowList" of XSD type "urn:dslforum-org:cwmp-1-2":TimeWindowList.
    struct TimeWindowList*               TimeWindowList                 1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ScheduleDownloadResponse
/// <PRE><BLOCKQUOTE>
///   ScheduleDownloadResponse message - Annex A.4.1.8
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":ScheduleDownloadResponse is a complexType.
///
struct _cwmp__ScheduleDownloadResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":CancelTransfer
/// <PRE><BLOCKQUOTE>
///   CancelTransfer message - Annex A.4.1.9
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":CancelTransfer is a complexType.
///
struct _cwmp__CancelTransfer
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":CancelTransferResponse
/// <PRE><BLOCKQUOTE>
///   CancelTransferResponse message - Annex A.4.1.9
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":CancelTransferResponse is a complexType.
///
struct _cwmp__CancelTransferResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ChangeDUState
/// <PRE><BLOCKQUOTE>
///   A request to perform an action on a Deployment Unit on the device
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":ChangeDUState is a complexType.
///
struct _cwmp__ChangeDUState
{
/// <PRE><BLOCKQUOTE>
///   The operations to be performed. The content of an operation is contained within the operation
///   sub-type.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct cwmp__OperationStruct* is 1..unbounded.
   $int                                  __sizeOperations               1;
/// Array struct cwmp__OperationStruct* of size 1..unbounded.
    struct cwmp__OperationStruct*        Operations                     1;
/// <PRE><BLOCKQUOTE>
///   An optional command key used to correlate future results of the operation or changes made to
///   the device as a result of the operation.
/// </BLOCKQUOTE></PRE>
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     0;	///< Optional element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ChangeDUStateResponse
/// <PRE><BLOCKQUOTE>
///   Response to a ChangeDUState message
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":ChangeDUStateResponse is a complexType.
///
struct _cwmp__ChangeDUStateResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":Inform
/// <PRE><BLOCKQUOTE>
///   Inform message - Annex A.3.3.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":Inform is a complexType.
///
struct _cwmp__Inform
{
/// Element "DeviceId" of XSD type "urn:dslforum-org:cwmp-1-2":DeviceIdStruct.
    struct cwmp__DeviceIdStruct*         DeviceId                       1;	///< Required element.
/// Element "Event" of XSD type "urn:dslforum-org:cwmp-1-2":EventList.
    struct EventList*                    Event                          1;	///< Required element.
/// Element "MaxEnvelopes" of XSD type xs:unsignedInt.
    unsigned int                         MaxEnvelopes                   1;	///< Required element.
/// Element "CurrentTime" of XSD type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// Element "RetryCount" of XSD type xs:unsignedInt.
    unsigned int                         RetryCount                     1;	///< Required element.
/// Element "ParameterList" of XSD type "urn:dslforum-org:cwmp-1-2":ParameterValueList.
    struct ParameterValueList*           ParameterList                  1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":InformResponse
/// <PRE><BLOCKQUOTE>
///   InformResponse message - Annex A.3.3.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":InformResponse is a complexType.
///
struct _cwmp__InformResponse
{
/// Element "MaxEnvelopes" of XSD type xs:unsignedInt.
    unsigned int                         MaxEnvelopes                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":TransferComplete
/// <PRE><BLOCKQUOTE>
///   TransferComplete message - Annex A.3.3.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":TransferComplete is a complexType.
///
struct _cwmp__TransferComplete
{
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     1;	///< Required element.
/// Element "FaultStruct" of XSD type "urn:dslforum-org:cwmp-1-2":TransferCompleteFaultStruct.
    struct cwmp__TransferCompleteFaultStruct*  FaultStruct                    1;	///< Required element.
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element "CompleteTime" of XSD type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":TransferCompleteResponse
/// <PRE><BLOCKQUOTE>
///   TransferCompleteResponse message - Annex A.3.3.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":TransferCompleteResponse is a complexType.
///
struct _cwmp__TransferCompleteResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousTransferComplete
/// <PRE><BLOCKQUOTE>
///   AutonomousTransferComplete message - Annex A.3.3.3
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":AutonomousTransferComplete is a complexType.
///
struct _cwmp__AutonomousTransferComplete
{
/// Length of this string is 0..1024.
    char*                                                              
                                         AnnounceURL                    1;	///< Required element.
/// Length of this string is 0..1024.
    char*                                                              
                                         TransferURL                    1;	///< Required element.
/// Element "IsDownload" of XSD type xs:boolean.
    enum xsd__boolean                    IsDownload                     1;	///< Required element.
/// Element "FileType" of XSD type "urn:dslforum-org:cwmp-1-2":TransferFileType.
    cwmp__TransferFileType               FileType                       1;	///< Required element.
/// Element "FileSize" of XSD type xs:unsignedInt.
    unsigned int                         FileSize                       1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         TargetFileName                 1;	///< Required element.
/// Element "FaultStruct" of XSD type "urn:dslforum-org:cwmp-1-2":TransferCompleteFaultStruct.
    struct cwmp__TransferCompleteFaultStruct*  FaultStruct                    1;	///< Required element.
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element "CompleteTime" of XSD type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousTransferCompleteResponse
/// <PRE><BLOCKQUOTE>
///   AutonomousTransferCompleteResponse message - Annex A.3.3.3
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":AutonomousTransferCompleteResponse is a complexType.
///
struct _cwmp__AutonomousTransferCompleteResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":Kicked
/// <PRE><BLOCKQUOTE>
///   Kicked message - Annex A.4.2.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":Kicked is a complexType.
///
struct _cwmp__Kicked
{
/// Length of this string is 0..32.
    char*                                                              
                                         Command                        1;	///< Required element.
/// Length of this string is 0..64.
    char*                                                              
                                         Referer                        1;	///< Required element.
/// Length of this string is 0..256.
    char*                                                              
                                         Arg                            1;	///< Required element.
/// Length of this string is 0..1024.
    char*                                                              
                                         Next                           1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":KickedResponse
/// <PRE><BLOCKQUOTE>
///   KickedResponse message - Annex A.4.2.1
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":KickedResponse is a complexType.
///
struct _cwmp__KickedResponse
{
/// Length of this string is 0..1024.
    char*                                                              
                                         NextURL                        1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":RequestDownload
/// <PRE><BLOCKQUOTE>
///   RequestDownload message - Annex A.4.2.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":RequestDownload is a complexType.
///
struct _cwmp__RequestDownload
{
/// Element "FileType" of XSD type "urn:dslforum-org:cwmp-1-2":DownloadFileType.
    cwmp__DownloadFileType               FileType                       1;	///< Required element.
/// Element "FileTypeArg" of XSD type "urn:dslforum-org:cwmp-1-2":FileTypeArg.
    struct FileTypeArg*                  FileTypeArg                    1;	///< Required element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":RequestDownloadResponse
/// <PRE><BLOCKQUOTE>
///   RequestDownloadResponse message - Annex A.4.2.2
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":RequestDownloadResponse is a complexType.
///
struct _cwmp__RequestDownloadResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":DUStateChangeComplete
/// <PRE><BLOCKQUOTE>
///   A message indicating a prior ChangeDUState request to perform an action on a Deployment Unit on the device has completed
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":DUStateChangeComplete is a complexType.
///
struct _cwmp__DUStateChangeComplete
{
/// <PRE><BLOCKQUOTE>
///   The results of the operation performed. The ordering of the operation results matches the
///   order of the operations in the corresponding ChangeDUState message.
/// </BLOCKQUOTE></PRE>
/// Size of array of struct cwmp__OpResultStruct* is 1..unbounded.
   $int                                  __sizeResults                  1;
/// Array struct cwmp__OpResultStruct* of size 1..unbounded.
    struct cwmp__OpResultStruct*         Results                        1;
/// <PRE><BLOCKQUOTE>
///   The command key specified in the corresponding ChangeDUState message, if any
/// </BLOCKQUOTE></PRE>
/// Element "CommandKey" of XSD type "urn:dslforum-org:cwmp-1-2":CommandKeyType.
    cwmp__CommandKeyType                 CommandKey                     0;	///< Optional element.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":DUStateChangeCompleteResponse
/// <PRE><BLOCKQUOTE>
///   Response to a DUStateChangeComplete message
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":DUStateChangeCompleteResponse is a complexType.
///
struct _cwmp__DUStateChangeCompleteResponse
{
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeComplete
/// <PRE><BLOCKQUOTE>
///   A message indicating an autonomous action for a Deployment Unit on the device has completed
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeComplete is a complexType.
///
struct _cwmp__AutonomousDUStateChangeComplete
{
/// <PRE><BLOCKQUOTE>
///   The results of the operation performed
/// </BLOCKQUOTE></PRE>
/// Size of array of struct cwmp__AutonOpResultStruct* is 1..unbounded.
   $int                                  __sizeResults                  1;
/// Array struct cwmp__AutonOpResultStruct* of size 1..unbounded.
    struct cwmp__AutonOpResultStruct*    Results                        1;
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeCompleteResponse
/// <PRE><BLOCKQUOTE>
///   Response to a AutonomousDUStateChangeComplete message
/// </BLOCKQUOTE></PRE>
/// @brief "urn:dslforum-org:cwmp-1-2":AutonomousDUStateChangeCompleteResponse is a complexType.
///
struct _cwmp__AutonomousDUStateChangeCompleteResponse
{
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterNames is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of xs:string.
struct ParameterNames
{
/// Pointer to array of char*.
    char*                               *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterValueList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ParameterValueStruct.
struct ParameterValueList
{
/// Pointer to array of struct cwmp__ParameterValueStruct*.
    struct cwmp__ParameterValueStruct*  *__ptrParameterValueStruct     ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":MethodList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of xs:string.
struct MethodList
{
/// Pointer to array of char*.
    char*                               *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":EventList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":EventStruct.
struct EventList
{
/// Pointer to array of struct cwmp__EventStruct*.
    struct cwmp__EventStruct*           *__ptrEventStruct              ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterInfoList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ParameterInfoStruct.
struct ParameterInfoList
{
/// Pointer to array of struct cwmp__ParameterInfoStruct*.
    struct cwmp__ParameterInfoStruct*   *__ptrParameterInfoStruct      ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":AccessList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":AccessListValueType.
struct AccessList
{
/// Pointer to array of enum cwmp__AccessListValueType.
    enum cwmp__AccessListValueType      *__ptrstring                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":SetParameterAttributesList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":SetParameterAttributesStruct.
struct SetParameterAttributesList
{
/// Pointer to array of struct cwmp__SetParameterAttributesStruct*.
    struct cwmp__SetParameterAttributesStruct* *__ptrSetParameterAttributesStruct;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":ParameterAttributeList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ParameterAttributeStruct.
struct ParameterAttributeList
{
/// Pointer to array of struct cwmp__ParameterAttributeStruct*.
    struct cwmp__ParameterAttributeStruct* *__ptrParameterAttributeStruct ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":TimeWindowList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":TimeWindowStruct.
struct TimeWindowList
{
/// Pointer to array of struct cwmp__TimeWindowStruct*.
    struct cwmp__TimeWindowStruct*      *__ptrTimeWindowStruct         ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":TransferList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":QueuedTransferStruct.
struct TransferList
{
/// Pointer to array of struct cwmp__QueuedTransferStruct*.
    struct cwmp__QueuedTransferStruct*  *__ptrQueuedTransferStruct     ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":AllTransferList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":AllQueuedTransferStruct.
struct AllTransferList
{
/// Pointer to array of struct cwmp__AllQueuedTransferStruct*.
    struct cwmp__AllQueuedTransferStruct* *__ptrAllQueuedTransferStruct  ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":InstallOpStruct is a complexType with complexContent extension of XSD type "urn:dslforum-org:cwmp-1-2":OperationStruct.
///
/// <PRE><BLOCKQUOTE>
///   An operation indicating a Deployment Unit should be installed
/// </BLOCKQUOTE></PRE>
struct cwmp__InstallOpStruct
{
/// INHERITED FROM cwmp__OperationStruct:
//  END OF INHERITED FROM cwmp__OperationStruct
/// <PRE><BLOCKQUOTE>
///   The URL of the Deployment Unit to download
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..1024.
    xsd__anyURI                                                        
                                         URL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The UUID to be used for the Deployment Unit being installed.
/// </BLOCKQUOTE></PRE>
/// Element "UUID" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    cwmp__DeploymentUnitUUID             UUID                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional username with which to authenticate against the url
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..256.
    char*                                                              
                                        *Username                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional password with which to authenticate against the url
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..256.
    char*                                                              
                                        *Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A reference to the Execution Environment upon which the Deployment Unit
///   is to be associated (e.g., ".SoftwareModules.ExecEnv.1.")
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..256.
    char*                                                              
                                        *ExecutionEnvRef                0;	///< Optional element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":UpdateOpStruct is a complexType with complexContent extension of XSD type "urn:dslforum-org:cwmp-1-2":OperationStruct.
///
/// <PRE><BLOCKQUOTE>
///   An operation indicating an individual or all Deployment Units should be updated
/// </BLOCKQUOTE></PRE>
struct cwmp__UpdateOpStruct
{
/// INHERITED FROM cwmp__OperationStruct:
//  END OF INHERITED FROM cwmp__OperationStruct
/// <PRE><BLOCKQUOTE>
///   The UUID of the Deployment Unit to update. If the UUID is not present and the URL is present then the URL will be used to determine the Deployment Unit to update. If both the UUID and the URL are not specified, the operation indicates all installed Deployment Units should be updated.
/// </BLOCKQUOTE></PRE>
/// Element "UUID" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    cwmp__DeploymentUnitUUID             UUID                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional Version used to clarify which Deployment Unit to update.
///   Only required in the case where multiple versions of the same Deployment Unit
///   are installed on the device, in which case if not specified the update request
///   will be rejected.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..32.
    char*                                                              
                                        *Version                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The URL to be used when updating a Deployment Unit. If a UUID is provided and the URL is present then it serves as an updated URL for the existing installed Deployment Unit. If the UUID is not
///   present and the URL is, it is used to determine the Deployment Unit
///   to update. If neither the URL or UUID is specified then all Deployment Units are to be updated.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..1024.
    xsd__anyURI                                                        
                                        *URL                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional username with which to authenticate against the url
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..256.
    char*                                                              
                                        *Username                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional password with which to authenticate against the url
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..256.
    char*                                                              
                                        *Password                       0;	///< Optional element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":UninstallOpStruct is a complexType with complexContent extension of XSD type "urn:dslforum-org:cwmp-1-2":OperationStruct.
///
/// <PRE><BLOCKQUOTE>
///   An operation indicating a Deployment Unit should be un-installed
/// </BLOCKQUOTE></PRE>
struct cwmp__UninstallOpStruct
{
/// INHERITED FROM cwmp__OperationStruct:
//  END OF INHERITED FROM cwmp__OperationStruct
/// <PRE><BLOCKQUOTE>
///   The UUID of the Deployment Unit to un-install
/// </BLOCKQUOTE></PRE>
/// Element "UUID" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    cwmp__DeploymentUnitUUID             UUID                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Version used to clarify which Deployment Unit to uninstall.
///   If not specified and there are multiple versions of the same Deployment Unit
///   installed on the device, then all of them will be uninstalled.
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..32.
    char*                                                              
                                        *Version                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A reference to the Execution Environment upon which the Deployment Unit
///   is to be removed from (e.g., ".SoftwareModules.ExecEnv.1.")
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..256.
    char*                                                              
                                        *ExecutionEnvRef                0;	///< Optional element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":AutonOpResultStruct is a complexType with complexContent extension of XSD type "urn:dslforum-org:cwmp-1-2":OpResultStruct.
///
/// <PRE><BLOCKQUOTE>
///   The result of a Deployment Unit operation performed autonomously on the device (i.e., not at the
///   direct request of the ACS)
/// </BLOCKQUOTE></PRE>
struct cwmp__AutonOpResultStruct
{
/// INHERITED FROM cwmp__OpResultStruct:
/// <PRE><BLOCKQUOTE>
///   The UUID of the affected Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Element "UUID" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitUUID.
    cwmp__DeploymentUnitUUID             UUID                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the affected Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Element "DeploymentUnitRef" of XSD type xs:string.
    char*                                DeploymentUnitRef              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Version of the affected Deployment Unit
/// </BLOCKQUOTE></PRE>
/// Length of this string is 0..32.
    char*                                                              
                                         Version                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The current state of the affected Deployment Unit after performing the operation
/// </BLOCKQUOTE></PRE>
/// Element "CurrentState" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitState.
    enum cwmp__DeploymentUnitState       CurrentState                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Whether or not the Deployment Unit resolved all of its dependencies after the Installation or Update
/// </BLOCKQUOTE></PRE>
/// Element "Resolved" of XSD type xs:boolean.
    enum xsd__boolean                    Resolved                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A comma-separated list of execution unit references (e.g., ".SoftwareModules.ExecutionUnit.2, .SoftwareModules.ExecutionUnit.3").
///   In the case of an install, the execution units are those created by the operation. In
///   the case of an uninstall, the execution units are those removed by the operation. In the case of an update, the execution units are those that remain after the operation
///   has completed.
/// </BLOCKQUOTE></PRE>
/// Element "ExecutionUnitRefList" of XSD type xs:string.
    char*                                ExecutionUnitRefList           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time on the device the operation on the affected Deployment Unit started. If the
///   CPE cannot determine this, then the value should be the Unknown Time value.
/// </BLOCKQUOTE></PRE>
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time on the device the operation on the affected Deployment Unit completed (successfully
///   or otherwise). If the CPE cannot determine this, then the value should be the Unknown Time
///   value.
/// </BLOCKQUOTE></PRE>
/// Element "CompleteTime" of XSD type xs:dateTime.
    time_t                               CompleteTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Fault structure conveying the success or, in the case of failure, reason for the failure,
///   of the operation
/// </BLOCKQUOTE></PRE>
/// Element "Fault" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitFaultStruct.
    struct cwmp__DeploymentUnitFaultStruct*  Fault                          1;	///< Required element.
//  END OF INHERITED FROM cwmp__OpResultStruct
/// <PRE><BLOCKQUOTE>
///   The operation that was performed against the deployment unit
/// </BLOCKQUOTE></PRE>
/// Element "OperationPerformed" of XSD type "urn:dslforum-org:cwmp-1-2":DeploymentUnitOperationType.
    cwmp__DeploymentUnitOperationType    OperationPerformed             1;	///< Required element.
};

/// @brief "urn:dslforum-org:cwmp-1-2":VoucherList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of SOAP-ENC:base64.
struct VoucherList
{
/// Pointer to array of struct SOAP_ENC__base64*.
    struct SOAP_ENC__base64*            *__ptrbase64                   ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":OptionList is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":OptionStruct.
struct OptionList
{
/// Pointer to array of struct cwmp__OptionStruct*.
    struct cwmp__OptionStruct*          *__ptrOptionStruct             ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief "urn:dslforum-org:cwmp-1-2":FileTypeArg is a complexType with complexContent restriction of XSD type SOAP-ENC:Array.
///
/// SOAP encoded array of "urn:dslforum-org:cwmp-1-2":ArgStruct.
struct FileTypeArg
{
/// Pointer to array of struct cwmp__ArgStruct*.
    struct cwmp__ArgStruct*             *__ptrArgStruct                ;
/// Size of the dynamic array.
    int                                  __size                        ;
/// Offset for partially transmitted arrays (uncomment only when required).
//  int                                  __offset                      ;
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SupportedCWMPVersions
/// @brief "urn:dslforum-org:cwmp-1-2":SupportedCWMPVersions is a complexType with simpleContent.
///
struct _cwmp__SupportedCWMPVersions
{
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// <PRE><BLOCKQUOTE>
///   NOTE: implementations MUST use a value of 0 for the mustUnderstand
///   attribute.
///   This is typically done in the XSD via a 'fixed="0"' attribute, but there are some problems with SOAP 1.1 that cause schema validation
///   issues.
/// </BLOCKQUOTE></PRE>
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       0;	///< Optional attribute.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":UseCWMPVersion
/// @brief "urn:dslforum-org:cwmp-1-2":UseCWMPVersion is a complexType with simpleContent.
///
struct _cwmp__UseCWMPVersion
{
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// <PRE><BLOCKQUOTE>
///   NOTE: implementations MUST use a value of 1 for the mustUnderstand
///   attribute.
///   This is typically done in the XSD via a 'fixed="1"' attribute, but there are some problems with SOAP 1.1 that cause schema validation
///   issues.
/// </BLOCKQUOTE></PRE>
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       1;	///< Required attribute.
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":SessionTimeout
/// @brief "urn:dslforum-org:cwmp-1-2":SessionTimeout is a complexType with simpleContent.
///
struct _cwmp__SessionTimeout
{
/// __item wraps "xs:unsignedInt" simpleContent.
    unsigned int                         __item                        ;
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       0;	///< Fixed optional value="0".
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":ID
/// @brief "urn:dslforum-org:cwmp-1-2":ID is a complexType with simpleContent.
///
struct _cwmp__ID
{
/// __item wraps "xs:string" simpleContent.
    char*                                __item                        ;
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       1;	///< Fixed required value="1".
};

/// @brief Top-level root element "urn:dslforum-org:cwmp-1-2":HoldRequests
/// @brief "urn:dslforum-org:cwmp-1-2":HoldRequests is a complexType with simpleContent.
///
struct _cwmp__HoldRequests
{
/// __item wraps "xs:boolean" simpleContent.
    enum xsd__boolean                    __item                        ;
/// Imported attribute reference SOAP-ENV:mustUnderstand.
   @char*                                SOAP_ENV__mustUnderstand       1;	///< Fixed required value="1".
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:dslforum-org:cwmp-1-2                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section cwmp Top-level root elements of schema "urn:dslforum-org:cwmp-1-2"

  - <SupportedCWMPVersions> @ref _cwmp__SupportedCWMPVersions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SupportedCWMPVersions(struct soap*, struct _cwmp__SupportedCWMPVersions*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SupportedCWMPVersions(struct soap*, struct _cwmp__SupportedCWMPVersions*);
    @endcode

  - <UseCWMPVersion> @ref _cwmp__UseCWMPVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__UseCWMPVersion(struct soap*, struct _cwmp__UseCWMPVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__UseCWMPVersion(struct soap*, struct _cwmp__UseCWMPVersion*);
    @endcode

  - <SessionTimeout> @ref _cwmp__SessionTimeout
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SessionTimeout(struct soap*, struct _cwmp__SessionTimeout*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SessionTimeout(struct soap*, struct _cwmp__SessionTimeout*);
    @endcode

  - <ID> @ref _cwmp__ID
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ID(struct soap*, struct _cwmp__ID*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ID(struct soap*, struct _cwmp__ID*);
    @endcode

  - <HoldRequests> @ref _cwmp__HoldRequests
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__HoldRequests(struct soap*, struct _cwmp__HoldRequests*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__HoldRequests(struct soap*, struct _cwmp__HoldRequests*);
    @endcode

  - <Fault> @ref _cwmp__Fault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Fault(struct soap*, struct _cwmp__Fault*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Fault(struct soap*, struct _cwmp__Fault*);
    @endcode

  - <GetRPCMethods> @ref _cwmp__GetRPCMethods
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetRPCMethods(struct soap*, struct _cwmp__GetRPCMethods*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetRPCMethods(struct soap*, struct _cwmp__GetRPCMethods*);
    @endcode

  - <GetRPCMethodsResponse> @ref _cwmp__GetRPCMethodsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetRPCMethodsResponse(struct soap*, struct _cwmp__GetRPCMethodsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetRPCMethodsResponse(struct soap*, struct _cwmp__GetRPCMethodsResponse*);
    @endcode

  - <SetParameterValues> @ref _cwmp__SetParameterValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterValues(struct soap*, struct _cwmp__SetParameterValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterValues(struct soap*, struct _cwmp__SetParameterValues*);
    @endcode

  - <SetParameterValuesResponse> @ref _cwmp__SetParameterValuesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterValuesResponse(struct soap*, struct _cwmp__SetParameterValuesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterValuesResponse(struct soap*, struct _cwmp__SetParameterValuesResponse*);
    @endcode

  - <GetParameterValues> @ref _cwmp__GetParameterValues
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterValues(struct soap*, struct _cwmp__GetParameterValues*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterValues(struct soap*, struct _cwmp__GetParameterValues*);
    @endcode

  - <GetParameterValuesResponse> @ref _cwmp__GetParameterValuesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterValuesResponse(struct soap*, struct _cwmp__GetParameterValuesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterValuesResponse(struct soap*, struct _cwmp__GetParameterValuesResponse*);
    @endcode

  - <GetParameterNames> @ref _cwmp__GetParameterNames
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterNames(struct soap*, struct _cwmp__GetParameterNames*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterNames(struct soap*, struct _cwmp__GetParameterNames*);
    @endcode

  - <GetParameterNamesResponse> @ref _cwmp__GetParameterNamesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterNamesResponse(struct soap*, struct _cwmp__GetParameterNamesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterNamesResponse(struct soap*, struct _cwmp__GetParameterNamesResponse*);
    @endcode

  - <SetParameterAttributes> @ref _cwmp__SetParameterAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterAttributes(struct soap*, struct _cwmp__SetParameterAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterAttributes(struct soap*, struct _cwmp__SetParameterAttributes*);
    @endcode

  - <SetParameterAttributesResponse> @ref _cwmp__SetParameterAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetParameterAttributesResponse(struct soap*, struct _cwmp__SetParameterAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetParameterAttributesResponse(struct soap*, struct _cwmp__SetParameterAttributesResponse*);
    @endcode

  - <GetParameterAttributes> @ref _cwmp__GetParameterAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterAttributes(struct soap*, struct _cwmp__GetParameterAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterAttributes(struct soap*, struct _cwmp__GetParameterAttributes*);
    @endcode

  - <GetParameterAttributesResponse> @ref _cwmp__GetParameterAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetParameterAttributesResponse(struct soap*, struct _cwmp__GetParameterAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetParameterAttributesResponse(struct soap*, struct _cwmp__GetParameterAttributesResponse*);
    @endcode

  - <AddObject> @ref _cwmp__AddObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AddObject(struct soap*, struct _cwmp__AddObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AddObject(struct soap*, struct _cwmp__AddObject*);
    @endcode

  - <AddObjectResponse> @ref _cwmp__AddObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AddObjectResponse(struct soap*, struct _cwmp__AddObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AddObjectResponse(struct soap*, struct _cwmp__AddObjectResponse*);
    @endcode

  - <DeleteObject> @ref _cwmp__DeleteObject
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DeleteObject(struct soap*, struct _cwmp__DeleteObject*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DeleteObject(struct soap*, struct _cwmp__DeleteObject*);
    @endcode

  - <DeleteObjectResponse> @ref _cwmp__DeleteObjectResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DeleteObjectResponse(struct soap*, struct _cwmp__DeleteObjectResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DeleteObjectResponse(struct soap*, struct _cwmp__DeleteObjectResponse*);
    @endcode

  - <Download> @ref _cwmp__Download
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Download(struct soap*, struct _cwmp__Download*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Download(struct soap*, struct _cwmp__Download*);
    @endcode

  - <DownloadResponse> @ref _cwmp__DownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DownloadResponse(struct soap*, struct _cwmp__DownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DownloadResponse(struct soap*, struct _cwmp__DownloadResponse*);
    @endcode

  - <Reboot> @ref _cwmp__Reboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Reboot(struct soap*, struct _cwmp__Reboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Reboot(struct soap*, struct _cwmp__Reboot*);
    @endcode

  - <RebootResponse> @ref _cwmp__RebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__RebootResponse(struct soap*, struct _cwmp__RebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__RebootResponse(struct soap*, struct _cwmp__RebootResponse*);
    @endcode

  - <GetQueuedTransfers> @ref _cwmp__GetQueuedTransfers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetQueuedTransfers(struct soap*, struct _cwmp__GetQueuedTransfers*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetQueuedTransfers(struct soap*, struct _cwmp__GetQueuedTransfers*);
    @endcode

  - <GetQueuedTransfersResponse> @ref _cwmp__GetQueuedTransfersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetQueuedTransfersResponse(struct soap*, struct _cwmp__GetQueuedTransfersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetQueuedTransfersResponse(struct soap*, struct _cwmp__GetQueuedTransfersResponse*);
    @endcode

  - <ScheduleInform> @ref _cwmp__ScheduleInform
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ScheduleInform(struct soap*, struct _cwmp__ScheduleInform*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ScheduleInform(struct soap*, struct _cwmp__ScheduleInform*);
    @endcode

  - <ScheduleInformResponse> @ref _cwmp__ScheduleInformResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ScheduleInformResponse(struct soap*, struct _cwmp__ScheduleInformResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ScheduleInformResponse(struct soap*, struct _cwmp__ScheduleInformResponse*);
    @endcode

  - <SetVouchers> @ref _cwmp__SetVouchers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetVouchers(struct soap*, struct _cwmp__SetVouchers*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetVouchers(struct soap*, struct _cwmp__SetVouchers*);
    @endcode

  - <SetVouchersResponse> @ref _cwmp__SetVouchersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__SetVouchersResponse(struct soap*, struct _cwmp__SetVouchersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__SetVouchersResponse(struct soap*, struct _cwmp__SetVouchersResponse*);
    @endcode

  - <GetOptions> @ref _cwmp__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetOptions(struct soap*, struct _cwmp__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetOptions(struct soap*, struct _cwmp__GetOptions*);
    @endcode

  - <GetOptionsResponse> @ref _cwmp__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetOptionsResponse(struct soap*, struct _cwmp__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetOptionsResponse(struct soap*, struct _cwmp__GetOptionsResponse*);
    @endcode

  - <Upload> @ref _cwmp__Upload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Upload(struct soap*, struct _cwmp__Upload*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Upload(struct soap*, struct _cwmp__Upload*);
    @endcode

  - <UploadResponse> @ref _cwmp__UploadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__UploadResponse(struct soap*, struct _cwmp__UploadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__UploadResponse(struct soap*, struct _cwmp__UploadResponse*);
    @endcode

  - <FactoryReset> @ref _cwmp__FactoryReset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__FactoryReset(struct soap*, struct _cwmp__FactoryReset*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__FactoryReset(struct soap*, struct _cwmp__FactoryReset*);
    @endcode

  - <FactoryResetResponse> @ref _cwmp__FactoryResetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__FactoryResetResponse(struct soap*, struct _cwmp__FactoryResetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__FactoryResetResponse(struct soap*, struct _cwmp__FactoryResetResponse*);
    @endcode

  - <GetAllQueuedTransfers> @ref _cwmp__GetAllQueuedTransfers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetAllQueuedTransfers(struct soap*, struct _cwmp__GetAllQueuedTransfers*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetAllQueuedTransfers(struct soap*, struct _cwmp__GetAllQueuedTransfers*);
    @endcode

  - <GetAllQueuedTransfersResponse> @ref _cwmp__GetAllQueuedTransfersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__GetAllQueuedTransfersResponse(struct soap*, struct _cwmp__GetAllQueuedTransfersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__GetAllQueuedTransfersResponse(struct soap*, struct _cwmp__GetAllQueuedTransfersResponse*);
    @endcode

  - <ScheduleDownload> @ref _cwmp__ScheduleDownload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ScheduleDownload(struct soap*, struct _cwmp__ScheduleDownload*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ScheduleDownload(struct soap*, struct _cwmp__ScheduleDownload*);
    @endcode

  - <ScheduleDownloadResponse> @ref _cwmp__ScheduleDownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ScheduleDownloadResponse(struct soap*, struct _cwmp__ScheduleDownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ScheduleDownloadResponse(struct soap*, struct _cwmp__ScheduleDownloadResponse*);
    @endcode

  - <CancelTransfer> @ref _cwmp__CancelTransfer
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__CancelTransfer(struct soap*, struct _cwmp__CancelTransfer*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__CancelTransfer(struct soap*, struct _cwmp__CancelTransfer*);
    @endcode

  - <CancelTransferResponse> @ref _cwmp__CancelTransferResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__CancelTransferResponse(struct soap*, struct _cwmp__CancelTransferResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__CancelTransferResponse(struct soap*, struct _cwmp__CancelTransferResponse*);
    @endcode

  - <ChangeDUState> @ref _cwmp__ChangeDUState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ChangeDUState(struct soap*, struct _cwmp__ChangeDUState*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ChangeDUState(struct soap*, struct _cwmp__ChangeDUState*);
    @endcode

  - <ChangeDUStateResponse> @ref _cwmp__ChangeDUStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__ChangeDUStateResponse(struct soap*, struct _cwmp__ChangeDUStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__ChangeDUStateResponse(struct soap*, struct _cwmp__ChangeDUStateResponse*);
    @endcode

  - <Inform> @ref _cwmp__Inform
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Inform(struct soap*, struct _cwmp__Inform*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Inform(struct soap*, struct _cwmp__Inform*);
    @endcode

  - <InformResponse> @ref _cwmp__InformResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__InformResponse(struct soap*, struct _cwmp__InformResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__InformResponse(struct soap*, struct _cwmp__InformResponse*);
    @endcode

  - <TransferComplete> @ref _cwmp__TransferComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__TransferComplete(struct soap*, struct _cwmp__TransferComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__TransferComplete(struct soap*, struct _cwmp__TransferComplete*);
    @endcode

  - <TransferCompleteResponse> @ref _cwmp__TransferCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__TransferCompleteResponse(struct soap*, struct _cwmp__TransferCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__TransferCompleteResponse(struct soap*, struct _cwmp__TransferCompleteResponse*);
    @endcode

  - <AutonomousTransferComplete> @ref _cwmp__AutonomousTransferComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AutonomousTransferComplete(struct soap*, struct _cwmp__AutonomousTransferComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AutonomousTransferComplete(struct soap*, struct _cwmp__AutonomousTransferComplete*);
    @endcode

  - <AutonomousTransferCompleteResponse> @ref _cwmp__AutonomousTransferCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AutonomousTransferCompleteResponse(struct soap*, struct _cwmp__AutonomousTransferCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AutonomousTransferCompleteResponse(struct soap*, struct _cwmp__AutonomousTransferCompleteResponse*);
    @endcode

  - <Kicked> @ref _cwmp__Kicked
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__Kicked(struct soap*, struct _cwmp__Kicked*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__Kicked(struct soap*, struct _cwmp__Kicked*);
    @endcode

  - <KickedResponse> @ref _cwmp__KickedResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__KickedResponse(struct soap*, struct _cwmp__KickedResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__KickedResponse(struct soap*, struct _cwmp__KickedResponse*);
    @endcode

  - <RequestDownload> @ref _cwmp__RequestDownload
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__RequestDownload(struct soap*, struct _cwmp__RequestDownload*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__RequestDownload(struct soap*, struct _cwmp__RequestDownload*);
    @endcode

  - <RequestDownloadResponse> @ref _cwmp__RequestDownloadResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__RequestDownloadResponse(struct soap*, struct _cwmp__RequestDownloadResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__RequestDownloadResponse(struct soap*, struct _cwmp__RequestDownloadResponse*);
    @endcode

  - <DUStateChangeComplete> @ref _cwmp__DUStateChangeComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DUStateChangeComplete(struct soap*, struct _cwmp__DUStateChangeComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DUStateChangeComplete(struct soap*, struct _cwmp__DUStateChangeComplete*);
    @endcode

  - <DUStateChangeCompleteResponse> @ref _cwmp__DUStateChangeCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__DUStateChangeCompleteResponse(struct soap*, struct _cwmp__DUStateChangeCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__DUStateChangeCompleteResponse(struct soap*, struct _cwmp__DUStateChangeCompleteResponse*);
    @endcode

  - <AutonomousDUStateChangeComplete> @ref _cwmp__AutonomousDUStateChangeComplete
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AutonomousDUStateChangeComplete(struct soap*, struct _cwmp__AutonomousDUStateChangeComplete*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AutonomousDUStateChangeComplete(struct soap*, struct _cwmp__AutonomousDUStateChangeComplete*);
    @endcode

  - <AutonomousDUStateChangeCompleteResponse> @ref _cwmp__AutonomousDUStateChangeCompleteResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__cwmp__AutonomousDUStateChangeCompleteResponse(struct soap*, struct _cwmp__AutonomousDUStateChangeCompleteResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__cwmp__AutonomousDUStateChangeCompleteResponse(struct soap*, struct _cwmp__AutonomousDUStateChangeCompleteResponse*);
    @endcode

*/

/* End of cwmp.h */
